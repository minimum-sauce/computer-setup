---

- name: Update and upgrade with apt
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600
    upgrade: yes
  become: true

# ------------------------------------------------------------------ #
# Setup executable
# ------------------------------------------------------------------ #

- name: Check if neovim exists
  ansible.builtin.stat:
    path: "{{ nvim_executable_dest_path }}"
  register: neovim_executable

- name: install neovim appimage
  ansible.builtin.get_url:
    url: "{{ nvim_appimage_download_link }}"
    dest: "{{ role_path }}/files/nvim.appimage"
  when: not neovim_executable.stat.exists


- name: Move neovim to correct folder 
  ansible.builtin.copy:
    dest: "{{ nvim_executable_dest_path }}"
    src: nvim.appimage
  when: not neovim_executable.stat.exists
  become: true

- name: make neovim appimage executable
  ansible.builtin.file:
    dest: "{{ nvim_executable_dest_path }}"   
    mode: a+x
  when: not neovim_executable.stat.exists
  become: true



# ------------------------------------------------------------------ #
# Setup config
# ------------------------------------------------------------------ #

- name: Make sure .config/ exists
  ansible.builtin.file:
    name: "~/.config/"
    state: directory

- name: check if config file for neovim already exists
  ansible.builtin.stat: 
    path: "{{ nvim_config_dest_path }}"
  register: neovim_config

- name: print out information
  ansible.builtin.debug:
    var: neovim_config
    verbosity: 0


- name: Remove config if not symbolic link
  ansible.builtin.file:
    path: "{{ nvim_config_dest_path }}"
    state: absent
  when: not (neovim_config.stat.islnk is defined and neovim_config.stat.islnk)

- name: Add config file for neovim
  ansible.builtin.file:
    src: "{{ role_path }}/files/nvim"
    dest: "{{ nvim_config_dest_path }}"
    state: link
    force: yes
  when: not (neovim_config.stat.islnk is defined and neovim_config.stat.islnk)
  
